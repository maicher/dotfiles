#!/bin/sh

showHelp () {
cat << EOF

NAME
	image_compress changes jpeg images compression in parallel jobs

SYNOPSIS
	image_compress [OPTION...] [FILENAME]

OPTIONS
	-f, --files FILES       newline-separated list of filenames to be converted
	                        (when used, the FILENAME argument is ignored);
	                        the newline is used as a separator to allow a list of files
	                        to be passed directly from the lf's fx variable
	-q, --quality QUALITY   target jpeg quality (default: 90)
	-H, --height HEIGHT     (optional) also resize the image to given height
	-v, --verbose           show what the script is doing
	-d, --debug             dump debug info into ./debug.txt file
	-j, --jobs JOBS         number of jobs to run in parallel (default: 1)
	-h, --help              display this help and exit

ARGUMENTS
	FILENAME        name of the file to be converted
	                (ignored when -f option is provided)

EXAMPLES
	Process single file:

		image_compress filename.jpg -q 80

	Process multiple files in 2 parallel jobs:

		image_compress -q 90 -j 2 -f 'filename1.jpg
		file name2.jpg
		filename3.jpg'

EOF
}

# Init options.
jobs=1
quality=90
geometry=''
files=''
verbose=''
debug=0

options=$(getopt -l "help,jobs:,quality:,height:,files:,debug,verbose" -o "hj:q:H:f:dv" -a -- "$@")
eval set -- "$options"

while true; do
	case $1 in
		-h|--help) showHelp; exit 0 ;;
		-j|--jobs) shift; jobs=$1 ;;
		-q|--quality) shift; quality=$1 ;;
		-H|--height) shift; geometry="-geometry x$1" ;;
		-f|--files) shift; files="$1" ;;
		-d|--debug) debug=1 ;;
		-v|--verbose) verbose='-verbose' ;;
		--) shift; break;;
	esac
	shift
done

# Init from arguments (unless -f was provided).
if [ -z "$files" ]; then
	files="$@"
fi

if [[ -z $files ]]; then
	exit 0
fi

# Prepare conversion commands
list=$(printf '%s\0' "$files" | sed -e 's/"/\\"/g' -e 's/\$/\\$/g' | tr '\n' '\0' | xargs -0 -I{} echo "mogrify $verbose $geometry -quality $quality \"{}\"")

# Dump debug info
if [ $debug -eq 1 ]; then
	echo "$list" > ./debug.txt
fi

# Execute conversion commands in parallel
echo "$list" | parallel --jobs $jobs
