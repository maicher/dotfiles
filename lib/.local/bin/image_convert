#!/bin/sh

showHelp () {
cat << EOF

NAME
	image_convert converts images to different formats in parallel jobs
	              it's a wrapper on top of ImageMagick(1) convert

SYNOPSIS
	image_convert [OPTION...] FILENAME...

OPTIONS
	-F, --format FORMAT  output format (default: jpg)
	-f, --files FILES    newline-separated list of filenames to be converted
	                     (when used, the FILENAME argument is ignored);
	                     the newline is used as a separator to allow a list of files
	                     to be passed directly from the lf's fx variable
	-j, --jobs JOBS      number of jobs to run in parallel (default: 1)
	-h, --help           display this help and exit

ARGUMENTS
	FILENAME        name of the file to be converted
	                (ignored when -f option is provided)

EXAMPLES
	Pass the file names as a newline-separated and single-quoted list as on the
	examle below.
	Below example converts 3 files to jpg with 2 parallel jobs:

	$ image_convert -f jpg -j 2 'filename1.psd
	file name2.png
	filename3.jpg'

EOF
}

# Default options
format=jpg
jobs=1

# Parse command-line options
options=$(getopt -l "help,format:,files:,jobs:" -o "hF:f:j:" -a -- "$@")
eval set -- "$options"

while true; do
	case $1 in
		-h|--help) showHelp; exit 0 ;;
		-F|--format) shift; format=$1 ;;
		-f|--files) shift; files="$1" ;;
		-j|--jobs) shift; jobs=$1 ;;
		--) shift; break;;
	esac
	shift
done

# Init from arguments (unless -f was provided).
if [ -z "$files" ]; then
	files="$@"
fi

if [[ -z $files ]]; then
	exit 0
fi

# Prepare conversion commands
list=$(printf '%s\0' "$files" | tr '\n' '\0' | xargs -0 -I{} echo "convert -verbose \"{}\" \"{}.$format\"")

# Execute conversion commands in parallel
echo "$list" | parallel --jobs $jobs
