#!/bin/sh

showHelp () {
cat << EOF

NAME
	image_convert converts images to different formats in parallel jobs
	              it's a wrapper on top of ImageMagick(1) convert

SYNOPSIS
	image_convert [OPTION...] FILENAME...

OPTIONS
	-f, --format FORMAT  output format (default: jpg)
	-j, --jobs JOBS      number of jobs to run in parallel (default: 1)
	-h, --help           display this help and exit

ARGUMENTS
	FILENAME  Newline-separated list of filenames to be converted.
	          The newline is used as a separator to allow a list of files
	          to be passed directly from the lf's fx variable.

EXAMPLES
	Pass the file names as a newline-separated and single-quoted list as on the
	examle below.
	Below example converts 3 files to jpg with 2 parallel jobs:

	$ image_convert -f jpg -j 2 'filename1.psd
	file name2.png
	filename3.jpg'

EOF
}

# Default options
format=jpg
jobs=1

# Parse command-line options
options=$(getopt -l "help,format:,jobs:" -o "hf:j:" -a -- "$@")
eval set -- "$options"

while true; do
	case $1 in
		-h|--help) showHelp; exit 0 ;;
		-f|--format) shift; format=$1 ;;
		-j|--jobs) shift; jobs=$1 ;;
		--) shift; break;;
	esac
	shift
done

# Ensure that file arguments exist
if [ $# -eq 0 ]; then
    echo "No files provided."
    showHelp
    exit 1
fi

# Prepare conversion commands
list=$(printf '%s\0' "$@" | tr '\n' '\0' | xargs -0 -I{} echo "convert -verbose \"{}\" \"{}.$format\"")

# Execute conversion commands in parallel
echo "$list" | parallel --jobs $jobs
